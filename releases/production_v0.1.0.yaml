apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  name: kubeftpd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: miniobackends.ftp.golder.org
spec:
  group: ftp.golder.org
  names:
    kind: MinioBackend
    listKind: MinioBackendList
    plural: miniobackends
    singular: miniobackend
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MinioBackend is the Schema for the miniobackends API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of MinioBackend
            properties:
              bucket:
                description: Bucket is the MinIO bucket name for storage
                pattern: ^[a-z0-9.-]+$
                type: string
              credentials:
                description: Credentials specify how to authenticate with MinIO
                properties:
                  accessKeyID:
                    description: AccessKeyID for MinIO authentication
                    type: string
                  secretAccessKey:
                    description: SecretAccessKey for MinIO authentication
                    type: string
                  useSecret:
                    description: UseSecret indicates credentials should be read from
                      a Secret
                    properties:
                      accessKeyIDKey:
                        default: accessKeyID
                        description: AccessKeyIDKey is the key in the secret containing
                          the access key ID
                        type: string
                      name:
                        description: Name of the secret
                        type: string
                      namespace:
                        description: Namespace of the secret (defaults to same namespace)
                        type: string
                      secretAccessKeyKey:
                        default: secretAccessKey
                        description: SecretAccessKeyKey is the key in the secret containing
                          the secret access key
                        type: string
                    required:
                    - name
                    type: object
                required:
                - accessKeyID
                - secretAccessKey
                type: object
              endpoint:
                description: Endpoint is the MinIO server endpoint URL
                pattern: ^https?://.*
                type: string
              pathPrefix:
                description: PathPrefix is the prefix path within the bucket for file
                  storage
                type: string
              region:
                description: Region is the MinIO bucket region (optional)
                type: string
              tls:
                description: TLS configuration for MinIO connection
                properties:
                  caCert:
                    description: CACert is the CA certificate for verifying the MinIO
                      server
                    type: string
                  enabled:
                    default: true
                    description: Enabled controls whether to use TLS
                    type: boolean
                  insecureSkipVerify:
                    default: false
                    description: InsecureSkipVerify controls whether to skip certificate
                      verification
                    type: boolean
                type: object
            required:
            - bucket
            - credentials
            - endpoint
            type: object
          status:
            description: status defines the observed state of MinioBackend
            properties:
              activeConnections:
                description: ActiveConnections tracks the number of active FTP connections
                  using this backend
                format: int32
                type: integer
              conditions:
                description: Conditions represent the latest available observations
                  of the backend's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastChecked:
                description: LastChecked timestamp of the last connectivity check
                format: date-time
                type: string
              message:
                description: Message provides additional status information
                type: string
              ready:
                description: Ready indicates if the backend is accessible and ready
                  for use
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: users.ftp.golder.org
spec:
  group: ftp.golder.org
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of User
            properties:
              backend:
                description: Backend specifies which backend storage to use
                properties:
                  kind:
                    description: Kind specifies the backend type (MinioBackend, WebDavBackend,
                      FilesystemBackend)
                    enum:
                    - MinioBackend
                    - WebDavBackend
                    - FilesystemBackend
                    type: string
                  name:
                    description: Name of the backend resource
                    type: string
                  namespace:
                    description: Namespace of the backend resource (defaults to same
                      namespace)
                    type: string
                required:
                - kind
                - name
                type: object
              enabled:
                default: true
                description: Enabled controls whether the user account is active
                type: boolean
              homeDirectory:
                description: HomeDirectory is the virtual home directory path for
                  the user
                pattern: ^/.*
                type: string
              password:
                description: Password is the FTP password (should be stored in a Secret
                  in production)
                type: string
              permissions:
                description: Permissions define what the user can do
                properties:
                  delete:
                    default: false
                    description: Delete permission for removing files
                    type: boolean
                  list:
                    default: true
                    description: List permission for listing directories
                    type: boolean
                  read:
                    default: true
                    description: Read permission for downloading files
                    type: boolean
                  write:
                    default: true
                    description: Write permission for uploading files
                    type: boolean
                type: object
              username:
                description: Username is the FTP username for authentication
                pattern: ^[a-zA-Z0-9_-]+$
                type: string
            required:
            - backend
            - homeDirectory
            - password
            - username
            type: object
          status:
            description: status defines the observed state of User
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the user's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              connectionCount:
                description: ConnectionCount tracks active connections for this user
                format: int32
                type: integer
              lastLogin:
                description: LastLogin timestamp of the user's last successful login
                format: date-time
                type: string
              message:
                description: Message provides additional status information
                type: string
              ready:
                description: Ready indicates if the user is properly configured and
                  available
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: webdavbackends.ftp.golder.org
spec:
  group: ftp.golder.org
  names:
    kind: WebDavBackend
    listKind: WebDavBackendList
    plural: webdavbackends
    singular: webdavbackend
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: WebDavBackend is the Schema for the webdavbackends API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of WebDavBackend
            properties:
              basePath:
                description: BasePath is the base path on the WebDAV server for file
                  storage
                type: string
              credentials:
                description: Credentials specify how to authenticate with the WebDAV
                  server
                properties:
                  password:
                    description: Password for WebDAV authentication
                    type: string
                  useSecret:
                    description: UseSecret indicates credentials should be read from
                      a Secret
                    properties:
                      name:
                        description: Name of the secret
                        type: string
                      namespace:
                        description: Namespace of the secret (defaults to same namespace)
                        type: string
                      passwordKey:
                        default: password
                        description: PasswordKey is the key in the secret containing
                          the password
                        type: string
                      usernameKey:
                        default: username
                        description: UsernameKey is the key in the secret containing
                          the username
                        type: string
                    required:
                    - name
                    type: object
                  username:
                    description: Username for WebDAV authentication
                    type: string
                required:
                - password
                - username
                type: object
              endpoint:
                description: Endpoint is the WebDAV server URL
                pattern: ^https?://.*
                type: string
              tls:
                description: TLS configuration for WebDAV connection
                properties:
                  caCert:
                    description: CACert is the CA certificate for verifying the WebDAV
                      server
                    type: string
                  enabled:
                    default: true
                    description: Enabled controls whether to use TLS
                    type: boolean
                  insecureSkipVerify:
                    default: false
                    description: InsecureSkipVerify controls whether to skip certificate
                      verification
                    type: boolean
                type: object
            required:
            - credentials
            - endpoint
            type: object
          status:
            description: status defines the observed state of WebDavBackend
            properties:
              activeConnections:
                description: ActiveConnections tracks the number of active FTP connections
                  using this backend
                format: int32
                type: integer
              conditions:
                description: Conditions represent the latest available observations
                  of the backend's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastChecked:
                description: LastChecked timestamp of the last connectivity check
                format: date-time
                type: string
              message:
                description: Message provides additional status information
                type: string
              ready:
                description: Ready indicates if the backend is accessible and ready
                  for use
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-controller-manager
  namespace: kubeftpd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-leader-election-role
  namespace: kubeftpd-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeftpd-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - filesystembackends
  - miniobackends
  - users
  - webdavbackends
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - filesystembackends/finalizers
  - miniobackends/finalizers
  - users/finalizers
  - webdavbackends/finalizers
  verbs:
  - update
- apiGroups:
  - ftp.golder.org
  resources:
  - filesystembackends/status
  - miniobackends/status
  - users/status
  - webdavbackends/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeftpd-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeftpd-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-miniobackend-admin-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends
  verbs:
  - '*'
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-miniobackend-editor-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-miniobackend-viewer-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - miniobackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-user-admin-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - users
  verbs:
  - '*'
- apiGroups:
  - ftp.golder.org
  resources:
  - users/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-user-editor-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - users/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-user-viewer-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - users
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - users/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-webdavbackend-admin-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends
  verbs:
  - '*'
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-webdavbackend-editor-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-webdavbackend-viewer-role
rules:
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ftp.golder.org
  resources:
  - webdavbackends/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-leader-election-rolebinding
  namespace: kubeftpd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeftpd-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubeftpd-controller-manager
  namespace: kubeftpd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
  name: kubeftpd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeftpd-manager-role
subjects:
- kind: ServiceAccount
  name: kubeftpd-controller-manager
  namespace: kubeftpd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeftpd-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeftpd-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: kubeftpd-controller-manager
  namespace: kubeftpd-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  name: kubeftpd-controller-manager-metrics-service
  namespace: kubeftpd-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  name: kubeftpd-ftp-passive-service
  namespace: kubeftpd-system
spec:
  externalTrafficPolicy: Local
  ports:
  - name: ftp-passive-30001
    port: 30001
    protocol: TCP
    targetPort: 30001
  - name: ftp-passive-30002
    port: 30002
    protocol: TCP
    targetPort: 30002
  - name: ftp-passive-30003
    port: 30003
    protocol: TCP
    targetPort: 30003
  - name: ftp-passive-30004
    port: 30004
    protocol: TCP
    targetPort: 30004
  - name: ftp-passive-30005
    port: 30005
    protocol: TCP
    targetPort: 30005
  selector:
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  name: kubeftpd-ftp-service
  namespace: kubeftpd-system
spec:
  externalTrafficPolicy: Local
  ports:
  - name: ftp
    port: 21
    protocol: TCP
    targetPort: 21
  - name: ftp-passive-range
    port: 30000
    protocol: TCP
    targetPort: 30000
  selector:
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubeftpd
    control-plane: controller-manager
  name: kubeftpd-controller-manager
  namespace: kubeftpd-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeftpd
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: kubeftpd
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        env:
        - name: FTP_PORT
          value: "21"
        - name: FTP_PASSIVE_PORT_MIN
          value: "30000"
        - name: FTP_PASSIVE_PORT_MAX
          value: "30100"
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: json
        - name: METRICS_PORT
          value: "8080"
        - name: HEALTH_PORT
          value: "8081"
        - name: ENABLE_PPROF
          value: "false"
        - name: DISABLE_HTTP2
          value: "true"
        image: ghcr.io/rossigee/kubeftpd:v0.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 21
          name: ftp
          protocol: TCP
        - containerPort: 30000
          name: ftp-passive-min
          protocol: TCP
        - containerPort: 30100
          name: ftp-passive-max
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubeftpd-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
