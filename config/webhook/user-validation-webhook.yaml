# ValidatingAdmissionWebhook for User password security
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: user-password-validator.ftp.golder.org
spec:
  clientConfig:
    service:
      name: kubeftpd-webhook-service
      namespace: kubeftpd-system
      path: /validate-ftp-golder-org-v1-user
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["ftp.golder.org"]
    apiVersions: ["v1"]
    resources: ["users"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail

---
# Service for the webhook
apiVersion: v1
kind: Service
metadata:
  name: kubeftpd-webhook-service
  namespace: kubeftpd-system
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 9443
  selector:
    app: kubeftpd
    component: webhook

---
# Certificate for webhook TLS
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kubeftpd-webhook-cert
  namespace: kubeftpd-system
spec:
  secretName: kubeftpd-webhook-certs
  issuerRef:
    name: kubeftpd-ca-issuer
    kind: ClusterIssuer
  dnsNames:
  - kubeftpd-webhook-service.kubeftpd-system.svc
  - kubeftpd-webhook-service.kubeftpd-system.svc.cluster.local

---
# ClusterIssuer for webhook certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: kubeftpd-ca-issuer
spec:
  ca:
    secretName: kubeftpd-ca-secret

---
# Webhook configuration with password validation
apiVersion: v1
kind: ConfigMap
metadata:
  name: webhook-config
  namespace: kubeftpd-system
data:
  config.yaml: |
    webhook:
      port: 9443
      certDir: /tmp/k8s-webhook-server/serving-certs
      validation:
        passwordStrength:
          minLength: 8
          requireComplexity: true
          forbiddenPatterns:
            - "password"
            - "123456" 
            - "qwerty"
            - "admin"
            - "test"
        production:
          requireSecrets: true
          secretNamingPattern: ".*-ftp-(password|credentials)$"
          forbidDeletePermissions: false
        secrets:
          validateExistence: true
          validateKeyExists: true
          validatePasswordStrength: true